{
	"info": {
		"_postman_id": "7becfaf0-da8d-4023-969a-9581a045fa8a",
		"name": "Patient File Lookup Tests",
		"description": "API for creating and managing patient information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24113271-7becfaf0-da8d-4023-969a-9581a045fa8a"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "New patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a9485c0-34a6-43d2-ba43-6f7bebcc9a72",
								"exec": [
									"const res = pm.response.json();",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('API response is successful', () => {",
									"    pm.expect(res.status).to.eql('success');",
									"});",
									"",
									"pm.test('Created user has correct type of user ID', () => {",
									"    pm.expect(res.id).to.be.a('string');",
									"});",
									"",
									"pm.test('Does not expose user password', () => {",
									"    pm.expect(res).to.not.have.property('password');",
									"});",
									"",
									"pm.test('Created user has all relevant fields', () => {",
									"    pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
									"});",
									"pm.collectionVariables.set('id', pm.response.json().id)",
									"",
									"function rawToObject (str) {",
									"    return str.split('&').reduce((prev, curr, i, arr) => {",
									"        var p = curr.split('=');",
									"        prev[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);",
									"        return prev;",
									"    }, {});",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "303f7ac7-dd5b-4324-8030-07a14a2212ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"create"
							]
						},
						"description": "Creates a new patient file in the system. The patient file will be assigned an ID automatically. This can be found in the response."
					},
					"response": [
						{
							"id": "515f7409-87e7-433d-b90f-94d823f85a8c",
							"name": "New patient file",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Content-Length",
									"value": "101",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Date",
									"value": "Thu, 10 Jan 2019 23:58:59 GMT",
									"description": ""
								},
								{
									"disabled": false,
									"key": "ETag",
									"value": "W/\"65-KsPJ95rCxmmvvRBY2Sqroxk2vmA\"",
									"description": ""
								},
								{
									"disabled": false,
									"key": "X-Powered-By",
									"value": "Express",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"firstName\": \"Ben\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "1643fab2-4edc-4794-b3a6-3d6b76c83a45"
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "Get all patient files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04b93646-a3d3-4dee-b2bb-96e93e83c156",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.collectionVariables.get('id');",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('One user exists', () => {",
									"   pm.expect(res).to.have.length(2);",
									"});",
									"",
									"pm.test('User has all relevant fields', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val).to.have.all.keys('id', 'firstName', 'lastName');",
									"            ",
									"        }",
									"    });",
									"});",
									"",
									"pm.test('User passwords are not exposed', () => {",
									"    res.forEach((val) => {",
									"       pm.expect(val).to.not.have.property('password');",
									"    });",
									"});",
									"",
									"// cleanup",
									"pm.globals.unset('id');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d475b820-2a9a-4d38-be3c-7dbf262e08dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get?all=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								}
							]
						},
						"description": "Get all patient files in the system."
					},
					"response": [
						{
							"id": "c8c5bc29-7fe9-4e7f-bc3f-2e2c3d8c0028",
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get?all=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Content-Length",
									"value": "105",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:00:53 GMT",
									"description": ""
								},
								{
									"disabled": false,
									"key": "ETag",
									"value": "W/\"69-ti7ujd/Cyb8EeoWoqRXh482Zy5o\"",
									"description": ""
								},
								{
									"disabled": false,
									"key": "X-Powered-By",
									"value": "Express",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"Ben\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"Smith\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get patient files by last name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bd3e16d-5661-45ee-b2a0-91ea786b8407",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.collectionVariables.get('id');",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('List of users is returned', () => {",
									"    pm.expect(res).to.be.an('array');",
									"});",
									"",
									"pm.test('User passwords are not exposed', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val).to.not.have.all.keys('password');   ",
									"        }",
									"    });",
									"});",
									"",
									"pm.test('User has all relevant fields and correct types', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val.id).to.be.a('string');",
									"            pm.expect(val.firstName).to.be.a('string');",
									"            pm.expect(val.lastName).to.be.a('string');",
									"        }",
									"    });",
									"});",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cea59f19-0edd-4e85-9305-7c05f2f3df02",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get/?firstName={{$randomLastName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get",
								""
							],
							"query": [
								{
									"key": "firstName",
									"value": "{{$randomLastName}}",
									"description": "The patient file's first name (required)"
								}
							]
						},
						"description": "Retrieves all patient files with the given `firstName`."
					},
					"response": [
						{
							"id": "6489c063-e750-4e69-a68b-f9f89235b4b3",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/?firstName={{$randomLastName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										""
									],
									"query": [
										{
											"key": "firstName",
											"value": "{{$randomLastName}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Content-Length",
									"value": "105",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:05:34 GMT",
									"description": ""
								},
								{
									"disabled": false,
									"key": "ETag",
									"value": "W/\"69-F/ktIhtM5We/sndYYNUK1vmdEnQ\"",
									"description": ""
								},
								{
									"disabled": false,
									"key": "X-Powered-By",
									"value": "Express",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"{{$randomLastName}}\"\n  }\n]"
						}
					]
				}
			],
			"id": "37d0b0bd-6ce9-438a-8f25-4f94d31e9b38"
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "545274f5-2b52-4ebe-a57a-b593229533d2",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.request.url.query.get('id');",
									"const firstName =JSON.parse(pm.request.body.raw).firstName",
									"console.log('res.id vs id: '+res.id + id)",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (res.status === 'success') {",
									"    // pm.test('User matches requested user', () => {",
									"    //     pm.expect(res.id).to.eql(id);",
									"    // });",
									"    ",
									"    pm.test('User has correct type of user ID', () => {",
									"        pm.expect(res.id).to.be.a('string');",
									"    });",
									"    ",
									"    pm.test('User has all relevant fields', () => {",
									"        pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
									"    });",
									"    ",
									"    pm.test('Does not expose user password', () => {",
									"        pm.expect(res).to.not.have.property('password');",
									"    });",
									"    ",
									"    pm.test('First name is updated to: ' + firstName, () => {",
									"        pm.expect(res.firstName).to.eql(firstName);",
									"    });",
									"}",
									"",
									"else if (res.status === 'no user found') {",
									"    pm.test('Lookup was against correct user', () => {",
									"        pm.expect(res.id).to.eql(id);",
									"    });",
									"}",
									"",
									"else {",
									"    pm.test(res.status).to.eql('invalid request');",
									"}",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6fd5d5d9-c976-4866-a7df-398c69fb2dfb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/update?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The patient file's ID (required)"
								}
							]
						},
						"description": "Send the keys that you'd like to update, this can be one or more of `firstName`, `lastName` and `password`."
					},
					"response": [
						{
							"id": "84f844ca-fba8-43a1-86a0-b0e1f66c0863",
							"name": "Update patient file",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/update?id={{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update"
									],
									"query": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Content-Length",
									"value": "106",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:18:07 GMT",
									"description": ""
								},
								{
									"disabled": false,
									"key": "ETag",
									"value": "W/\"6a-SA9mzR+M2pmN7WPGgLm1ZqtRYis\"",
									"description": ""
								},
								{
									"disabled": false,
									"key": "X-Powered-By",
									"value": "Express",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"firstName\": \"Benjamin\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "f39c2c90-35cf-4ac1-8ce9-c237dc15836b"
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1efd7f62-819d-45e3-a688-4722def6a61b",
								"exec": [
									"const response = pm.response;",
									"const id = pm.request.url.query.get('id');",
									"",
									"pm.test('Operation is successful', () => {",
									"    const res = response.json();",
									"    pm.expect(res.status).to.eql('success');",
									"});",
									"",
									"",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ec6f5508-b7d7-47fe-9015-3261b27b143b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"\""
						},
						"url": {
							"raw": "{{baseUrl}}/delete?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}",
									"description": "The patient file's ID"
								}
							]
						},
						"description": "Deletes a patient file from the system by `id`."
					},
					"response": [
						{
							"id": "8c0be54f-25e1-4fff-9708-b72b4378949b",
							"name": "Delete patient file",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"\""
								},
								"url": {
									"raw": "{{baseUrl}}/delete?id={{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Content-Length",
									"value": "64",
									"description": ""
								},
								{
									"disabled": false,
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:20:55 GMT",
									"description": ""
								},
								{
									"disabled": false,
									"key": "ETag",
									"value": "W/\"40-bT/ASzl0KO3wj/eo2xEBaHPLnvk\"",
									"description": ""
								},
								{
									"disabled": false,
									"key": "X-Powered-By",
									"value": "Express",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "19381920-1f4c-4c30-8767-de1902a9374d"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "756f3603-782c-4937-8fbf-7e6ccb153870",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7240db77-c5e7-4ea0-8bf6-466084c126b3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "32eb7a26-a194-4541-80a0-049684c830e0",
			"key": "baseUrl",
			"value": "https://03d3ab1c-b3ee-4518-bea3-128334115aab.mock.pstmn.io",
			"type": "string"
		}
	]
}