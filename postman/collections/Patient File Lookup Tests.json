{
	"info": {
		"_postman_id": "afcc8ec4-ab09-4c9d-9505-5ad9291774b7",
		"name": "Patient File Lookup Tests",
		"description": "API for creating and managing patient information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "16901628-afcc8ec4-ab09-4c9d-9505-5ad9291774b7"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "New patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "487cd446-a498-4d5d-89a8-ae8c988dd45a",
								"exec": [
									"const res = pm.response.json();",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('API response is successful', () => {",
									"    pm.expect(res.status).to.eql('success');",
									"});",
									"",
									"pm.test('Created user has correct type of user ID', () => {",
									"    pm.expect(res.id).to.be.a('string');",
									"});",
									"",
									"pm.test('Does not expose user password', () => {",
									"    pm.expect(res).to.not.have.property('password');",
									"});",
									"",
									"pm.test('Created user has all relevant fields', () => {",
									"    pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
									"});",
									"pm.collectionVariables.set('id', pm.response.json().id)",
									"",
									"function rawToObject (str) {",
									"    return str.split('&').reduce((prev, curr, i, arr) => {",
									"        var p = curr.split('=');",
									"        prev[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);",
									"        return prev;",
									"    }, {});",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d312ec13-3ef2-470e-b974-7de119923115",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"create"
							]
						},
						"description": "Creates a new patient file in the system. The patient file will be assigned an ID automatically. This can be found in the response."
					},
					"response": [
						{
							"id": "a5b7f794-6475-47cc-a681-d56d89890031",
							"name": "New patient file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"create"
									]
								},
								"description": "Creates a new patient file in the system. The patient file will be assigned an ID automatically. This can be found in the response."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "101"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Thu, 10 Jan 2019 23:58:59 GMT"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"65-KsPJ95rCxmmvvRBY2Sqroxk2vmA\""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"firstName\": \"Ben\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "a1381283-1d37-4955-8dcc-5562b63fcfd6"
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "Get all patient files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8234a342-d414-4d41-932d-346745fcd8f8",
								"type": "text/javascript",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.collectionVariables.get('id');",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('One user exists', () => {",
									"   pm.expect(res).to.have.length(2);",
									"});",
									"",
									"pm.test('User has all relevant fields', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val).to.have.all.keys('id', 'firstName', 'lastName');",
									"            ",
									"        }",
									"    });",
									"});",
									"",
									"pm.test('User passwords are not exposed', () => {",
									"    res.forEach((val) => {",
									"       pm.expect(val).to.not.have.property('password');",
									"    });",
									"});",
									"",
									"// cleanup",
									"pm.globals.unset('id');",
									""
								]
							}
						}
					],
					"id": "53b8c671-79fb-4e83-81a4-53a76ae4a505",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get?all=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								}
							]
						},
						"description": "Get all patient files in the system."
					},
					"response": [
						{
							"id": "693faad1-ebf8-483f-8e0f-630a493efd49",
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get?all=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										}
									]
								},
								"description": "Get all patient files in the system."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "105"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:00:53 GMT"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"69-ti7ujd/Cyb8EeoWoqRXh482Zy5o\""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"Ben\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"Smith\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get all patient files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "229d7c56-c86a-4f73-9d57-de9d5f872ba9",
								"type": "text/javascript",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.collectionVariables.get('id');",
									"",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('List of users is returned', () => {",
									"    pm.expect(res).to.be.an('array');",
									"});",
									"",
									"pm.test('User passwords are not exposed', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val).to.not.have.all.keys('password');   ",
									"        }",
									"    });",
									"});",
									"",
									"pm.test('User has all relevant fields and correct types', () => {",
									"    res.forEach((val, i) => {",
									"        if (i > 0) {",
									"            pm.expect(val.id).to.be.a('string');",
									"            pm.expect(val.firstName).to.be.a('string');",
									"            pm.expect(val.lastName).to.be.a('string');",
									"        }",
									"    });",
									"});",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');",
									""
								]
							}
						}
					],
					"id": "a35bba3f-6ffa-4ceb-bd0d-e1bf3fb2e36e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get",
								""
							]
						},
						"description": "Get all patient files in the system."
					},
					"response": [
						{
							"id": "0429fd8f-7c6f-4ba0-bfd4-12cd60294c35",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										""
									]
								},
								"description": "Get all patient files in the system."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "105"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:05:34 GMT"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"69-F/ktIhtM5We/sndYYNUK1vmdEnQ\""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"{{$randomLastName}}\"\n  }\n]"
						}
					]
				}
			],
			"id": "7bef37c1-4bb5-4481-9321-e9bc24f448fb"
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32170865-74c9-41a9-9fc7-0060f2b3726f",
								"type": "text/javascript",
								"exec": [
									"const res = pm.response.json();",
									"const id = pm.request.url.query.get('id');",
									"const firstName =JSON.parse(pm.request.body.raw).firstName",
									"console.log('res.id vs id: '+res.id + id)",
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (res.status === 'success') {",
									"    // pm.test('User matches requested user', () => {",
									"    //     pm.expect(res.id).to.eql(id);",
									"    // });",
									"    ",
									"    pm.test('User has correct type of user ID', () => {",
									"        pm.expect(res.id).to.be.a('string');",
									"    });",
									"    ",
									"    pm.test('User has all relevant fields', () => {",
									"        pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
									"    });",
									"    ",
									"    pm.test('Does not expose user password', () => {",
									"        pm.expect(res).to.not.have.property('password');",
									"    });",
									"    ",
									"    pm.test('First name is updated to: ' + firstName, () => {",
									"        pm.expect(res.firstName).to.eql(firstName);",
									"    });",
									"}",
									"",
									"else if (res.status === 'no user found') {",
									"    pm.test('Lookup was against correct user', () => {",
									"        pm.expect(res.id).to.eql(id);",
									"    });",
									"}",
									"",
									"else {",
									"    pm.test(res.status).to.eql('invalid request');",
									"}",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');",
									""
								]
							}
						}
					],
					"id": "2f68f6d0-8e11-453d-9f45-16b5e25a26ee",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/update?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update"
							],
							"query": [
								{
									"description": "The patient file's ID (required)",
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Send the keys that you'd like to update, this can be one or more of `firstName`, `lastName` and `password`."
					},
					"response": [
						{
							"id": "9a20b2cc-8cb7-4184-abaa-5d6c2c1f5872",
							"name": "Update patient file",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/update?id={{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update"
									],
									"query": [
										{
											"description": "The patient file's ID (required)",
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Send the keys that you'd like to update, this can be one or more of `firstName`, `lastName` and `password`."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "106"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:18:07 GMT"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"6a-SA9mzR+M2pmN7WPGgLm1ZqtRYis\""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"firstName\": \"Benjamin\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "3f16d9eb-4768-4f58-a805-ed2f4c116f2c"
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete patient file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fab1360-4631-406f-b93e-356f3d5e40ce",
								"type": "text/javascript",
								"exec": [
									"const response = pm.response;",
									"const id = pm.request.url.query.get('id');",
									"",
									"pm.test('Operation is successful', () => {",
									"    const res = response.json();",
									"    pm.expect(res.status).to.eql('success');",
									"});",
									"",
									"",
									"",
									"// cleanup",
									"pm.collectionVariables.unset('id');"
								]
							}
						}
					],
					"id": "7af46f09-2c3d-481f-8428-06358399ce2e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"\""
						},
						"url": {
							"raw": "{{baseUrl}}/delete?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete"
							],
							"query": [
								{
									"description": "The patient file's ID",
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes a patient file from the system by `id`."
					},
					"response": [
						{
							"id": "a38de434-415c-40c6-9eda-8ae1bec1d597",
							"name": "Delete patient file",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/plain"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"\""
								},
								"url": {
									"raw": "{{baseUrl}}/delete?id={{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"description": "The patient file's ID",
											"key": "id",
											"value": "{{id}}"
										}
									]
								},
								"description": "Deletes a patient file from the system by `id`."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "64"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:20:55 GMT"
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"40-bT/ASzl0KO3wj/eo2xEBaHPLnvk\""
								},
								{
									"disabled": false,
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"status\": \"success\"\n}"
						}
					]
				}
			],
			"id": "30436c57-9118-40fc-9330-f056652e15a5"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d81bd4c4-d655-4f77-b005-8d48470a9f6a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "81b009a9-7457-47f7-875f-f5315ff180da",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4568c5bf-96cb-455a-a547-540b3ac44adc",
			"key": "baseUrl",
			"value": "https://03d3ab1c-b3ee-4518-bea3-128334115aab.mock.pstmn.io",
			"type": "string"
		}
	]
}